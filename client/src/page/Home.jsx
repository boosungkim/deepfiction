import React, { useState, useEffect } from 'react';
import { Loader, Card, FormField } from '../components';

const RenderCards = ({ data, title }) => {
  if(data?.length > 0){
    return data.map((story) => <Card key={story._id} {...story} />)
  }

  return(
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  )
}

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allStories, setAllStories] = useState(null);
  const [searchText, setSearchText] = useState('');

  useEffect(() => {
    const fetchStories = async () => {
      setLoading(true);
      try{
        const response = await fetch('http://localhost/api/v1/story',{
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        })

        if(response.ok){
          const result = await response.json();

          setAllStories(result.data.reverse());
        }
      } catch (error){

      } finally{
        setLoading(false);
      }
    }
  }, []);

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#2223728] text-[32px]">The Community Showcase</h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w[500px]">Browse through a collection of stories generated by OpenAI and DALL-E AI</p>
      </div>

      <div className="mt-16">
        <FormField />
      </div>


      <div className="mt-10">
        {/* Loading circle */}
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          // Load content
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}

            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards data={[]}
                            title="No search results found" />
              ) : (
                <RenderCards data={allStories}
                            title="No stories found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home